"""Update voice field to TEXT for base64 storage

Revision ID: d4c002bbd8cb
Revises: 3bb009903077
Create Date: 2025-07-08 23:58:16.602567

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd4c002bbd8cb'
down_revision: Union[str, Sequence[str], None] = '3bb009903077'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.String(), nullable=False))
    op.alter_column('users', 'voice',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               comment='Base64 encoded voice data',
               existing_nullable=True)
    op.drop_constraint(op.f('users_name_key'), 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint(op.f('users_name_key'), 'users', ['name'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'voice',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               comment=None,
               existing_comment='Base64 encoded voice data',
               existing_nullable=True)
    op.drop_column('users', 'username')
    # ### end Alembic commands ###
